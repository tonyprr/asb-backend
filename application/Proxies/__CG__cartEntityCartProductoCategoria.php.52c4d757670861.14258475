<?php

namespace Proxies\__CG__\cart\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CartProductoCategoria extends \cart\Entity\CartProductoCategoria implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdcontcate()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idcontcate"];
        }
        $this->__load();
        return parent::getIdcontcate();
    }

    public function setNivelCate($nivelCate)
    {
        $this->__load();
        return parent::setNivelCate($nivelCate);
    }

    public function getNivelCate()
    {
        $this->__load();
        return parent::getNivelCate();
    }

    public function setImagenCate($imagenCate)
    {
        $this->__load();
        return parent::setImagenCate($imagenCate);
    }

    public function getImagenCate()
    {
        $this->__load();
        return parent::getImagenCate();
    }

    public function setOrdenCate($ordenCate)
    {
        $this->__load();
        return parent::setOrdenCate($ordenCate);
    }

    public function getOrdenCate()
    {
        $this->__load();
        return parent::getOrdenCate();
    }

    public function setStateCate($stateCate)
    {
        $this->__load();
        return parent::setStateCate($stateCate);
    }

    public function getStateCate()
    {
        $this->__load();
        return parent::getStateCate();
    }

    public function setFechamodfCate($fechamodfCate)
    {
        $this->__load();
        return parent::setFechamodfCate($fechamodfCate);
    }

    public function getFechamodfCate()
    {
        $this->__load();
        return parent::getFechamodfCate();
    }

    public function setFecharegCate($fecharegCate)
    {
        $this->__load();
        return parent::setFecharegCate($fecharegCate);
    }

    public function getFecharegCate()
    {
        $this->__load();
        return parent::getFecharegCate();
    }

    public function addLanguage(\cart\Entity\CartProductoCategoriaLanguage $languages)
    {
        $this->__load();
        return parent::addLanguage($languages);
    }

    public function removeLanguage(\cart\Entity\CartProductoCategoriaLanguage $languages)
    {
        $this->__load();
        return parent::removeLanguage($languages);
    }

    public function getLanguages()
    {
        $this->__load();
        return parent::getLanguages();
    }

    public function addTipo(\cart\Entity\CartProductoCategoriaTipo $tipos)
    {
        $this->__load();
        return parent::addTipo($tipos);
    }

    public function removeTipo(\cart\Entity\CartProductoCategoriaTipo $tipos)
    {
        $this->__load();
        return parent::removeTipo($tipos);
    }

    public function getTipos()
    {
        $this->__load();
        return parent::getTipos();
    }

    public function setContcatePadre(\cart\Entity\CartProductoCategoria $contcatePadre = NULL)
    {
        $this->__load();
        return parent::setContcatePadre($contcatePadre);
    }

    public function getContcatePadre()
    {
        $this->__load();
        return parent::getContcatePadre();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idcontcate', 'nivelCate', 'imagenCate', 'ordenCate', 'stateCate', 'fechamodfCate', 'fecharegCate', 'languages', 'tipos', 'contcatePadre');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}