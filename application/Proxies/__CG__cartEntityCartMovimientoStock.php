<?php

namespace Proxies\__CG__\cart\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CartMovimientoStock extends \cart\Entity\CartMovimientoStock implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdMovimientoStock()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["idMovimientoStock"];
        }
        $this->__load();
        return parent::getIdMovimientoStock();
    }

    public function setCantidad($cantidad)
    {
        $this->__load();
        return parent::setCantidad($cantidad);
    }

    public function getCantidad()
    {
        $this->__load();
        return parent::getCantidad();
    }

    public function setIduser($iduser)
    {
        $this->__load();
        return parent::setIduser($iduser);
    }

    public function getIduser()
    {
        $this->__load();
        return parent::getIduser();
    }

    public function setFechaCaducidad($fechaCaducidad)
    {
        $this->__load();
        return parent::setFechaCaducidad($fechaCaducidad);
    }

    public function getFechaCaducidad()
    {
        $this->__load();
        return parent::getFechaCaducidad();
    }

    public function setFechaRegistro($fechaRegistro)
    {
        $this->__load();
        return parent::setFechaRegistro($fechaRegistro);
    }

    public function getFechaRegistro()
    {
        $this->__load();
        return parent::getFechaRegistro();
    }

    public function setFechaActualizacion($fechaActualizacion)
    {
        $this->__load();
        return parent::setFechaActualizacion($fechaActualizacion);
    }

    public function getFechaActualizacion()
    {
        $this->__load();
        return parent::getFechaActualizacion();
    }

    public function setOrden(\cart\Entity\CartOrden $orden = NULL)
    {
        $this->__load();
        return parent::setOrden($orden);
    }

    public function getOrden()
    {
        $this->__load();
        return parent::getOrden();
    }

    public function setProducto(\cart\Entity\CartProducto $producto = NULL)
    {
        $this->__load();
        return parent::setProducto($producto);
    }

    public function getProducto()
    {
        $this->__load();
        return parent::getProducto();
    }

    public function setMovimientoStockTipo(\cart\Entity\CartMovimientoStockTipo $movimientoStockTipo = NULL)
    {
        $this->__load();
        return parent::setMovimientoStockTipo($movimientoStockTipo);
    }

    public function getMovimientoStockTipo()
    {
        $this->__load();
        return parent::getMovimientoStockTipo();
    }

    public function setFechaIngreso($fechaIngreso)
    {
        $this->__load();
        return parent::setFechaIngreso($fechaIngreso);
    }

    public function getFechaIngreso()
    {
        $this->__load();
        return parent::getFechaIngreso();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idMovimientoStock', 'cantidad', 'iduser', 'fechaCaducidad', 'fechaIngreso', 'fechaRegistro', 'fechaActualizacion', 'orden', 'producto', 'movimientoStockTipo');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}