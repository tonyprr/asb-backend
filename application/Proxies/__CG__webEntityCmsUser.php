<?php

namespace Proxies\__CG__\web\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CmsUser extends \web\Entity\CmsUser implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIduser()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["iduser"];
        }
        $this->__load();
        return parent::getIduser();
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setNameUser($nameUser)
    {
        $this->__load();
        return parent::setNameUser($nameUser);
    }

    public function getNameUser()
    {
        $this->__load();
        return parent::getNameUser();
    }

    public function setAddressUser($addressUser)
    {
        $this->__load();
        return parent::setAddressUser($addressUser);
    }

    public function getAddressUser()
    {
        $this->__load();
        return parent::getAddressUser();
    }

    public function setDocumentUser($documentUser)
    {
        $this->__load();
        return parent::setDocumentUser($documentUser);
    }

    public function getDocumentUser()
    {
        $this->__load();
        return parent::getDocumentUser();
    }

    public function setOcupationUser($ocupationUser)
    {
        $this->__load();
        return parent::setOcupationUser($ocupationUser);
    }

    public function getOcupationUser()
    {
        $this->__load();
        return parent::getOcupationUser();
    }

    public function setPhoneUser($phoneUser)
    {
        $this->__load();
        return parent::setPhoneUser($phoneUser);
    }

    public function getPhoneUser()
    {
        $this->__load();
        return parent::getPhoneUser();
    }

    public function setMobileUser($mobileUser)
    {
        $this->__load();
        return parent::setMobileUser($mobileUser);
    }

    public function getMobileUser()
    {
        $this->__load();
        return parent::getMobileUser();
    }

    public function setEmailUser($emailUser)
    {
        $this->__load();
        return parent::setEmailUser($emailUser);
    }

    public function getEmailUser()
    {
        $this->__load();
        return parent::getEmailUser();
    }

    public function setNickUser($nickUser)
    {
        $this->__load();
        return parent::setNickUser($nickUser);
    }

    public function getNickUser()
    {
        $this->__load();
        return parent::getNickUser();
    }

    public function setPassUser($passUser)
    {
        $this->__load();
        return parent::setPassUser($passUser);
    }

    public function getPassUser()
    {
        $this->__load();
        return parent::getPassUser();
    }

    public function setTypeUser($typeUser)
    {
        $this->__load();
        return parent::setTypeUser($typeUser);
    }

    public function getTypeUser()
    {
        $this->__load();
        return parent::getTypeUser();
    }

    public function setStateUser($stateUser)
    {
        $this->__load();
        return parent::setStateUser($stateUser);
    }

    public function getStateUser()
    {
        $this->__load();
        return parent::getStateUser();
    }

    public function setRegistrationUser($registrationUser)
    {
        $this->__load();
        return parent::setRegistrationUser($registrationUser);
    }

    public function getRegistrationUser()
    {
        $this->__load();
        return parent::getRegistrationUser();
    }

    public function setModificationDateUser($modificationDateUser)
    {
        $this->__load();
        return parent::setModificationDateUser($modificationDateUser);
    }

    public function getModificationDateUser()
    {
        $this->__load();
        return parent::getModificationDateUser();
    }

    public function setTypeDocuUser(\web\Entity\CmsTipoDocumento $typeDocuUser = NULL)
    {
        $this->__load();
        return parent::setTypeDocuUser($typeDocuUser);
    }

    public function getTypeDocuUser()
    {
        $this->__load();
        return parent::getTypeDocuUser();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'iduser', 'role', 'nameUser', 'addressUser', 'documentUser', 'ocupationUser', 'phoneUser', 'mobileUser', 'emailUser', 'nickUser', 'passUser', 'typeUser', 'stateUser', 'registrationUser', 'modificationDateUser', 'typeDocuUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}