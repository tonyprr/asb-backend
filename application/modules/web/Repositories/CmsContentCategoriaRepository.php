<?php

namespace web\Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * CmsContentCategoriaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CmsContentCategoriaRepository extends EntityRepository
{
    public function listRecords($catePadre, $oLanguage, $estado="TODOS", $pageStart=NULL, $pageLimit=NULL) {
        $count= 0;
        if(!$oLanguage instanceof \web\Entity\CmsLanguage)
            $oLanguage = $this->_em->getRepository("\web\Entity\CmsLanguage")->findOneByidLanguage($oLanguage);
        
        if ($catePadre != NULL) {
            $oContentCategoria = $this->find($catePadre );
            if(!($oContentCategoria instanceof \web\Entity\CmsContentCategoria)) {
                throw new \Exception('No existe la categoria del producto.',1);
            }
        }

        $qbContentCategoria = $this->_em->createQueryBuilder();
        $qbContentCategoria->select(
                    '
                    pc.idcontcate, pc.nivelCate, pc.imagenCate, pc.ordenCate, pc.estadoCate,
                    pcl.descripcion, pcl.detalle
                    '
                    )->from($this->_entityName,'pc')->innerJoin('pc.languages','pcl')->where('pc.nivelCate > 0')
                    ->andWhere("pcl.language = :lang")->setParameter('lang', $oLanguage)
                   ->orderBy('pc.ordenCate','ASC');
        if ($catePadre != NULL) $qbContentCategoria->andWhere('pc.contcatePadre = :categoria')->setParameter('categoria', $oContentCategoria);
        if ($estado != "TODOS") $qbContentCategoria->andWhere('pc.estadoCate = :estado')->setParameter('estado', $estado);
        $qyContentCategoria = $qbContentCategoria->getQuery();
        
        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyContentCategoria);
            $qyContentCategoria->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        $aContentCategoria = $qyContentCategoria->getResult();
        
        return $aContentCategoria;
    }
    
    public function getTree($idcatpadre = 1, $language=1, $todos = false) {
        $this->oTree['str'] = '';
        $this->generateTree($idcatpadre, $language, $todos);
        $this->oTree['str'] = "[".$this->oTree['str']."]";
        return $this->oTree;
    }
    
    private function generateTree($idcatpadre, $language, $todos, $profundidad = 0) {
//        header("Content-Type: text/html; charset=ISO-8859-1");
        try {
            $oCategoriaPadre = $this->find( $idcatpadre );
            
            $qbProdCate = $this->_em->createQueryBuilder();
            $qbProdCate->select('ps')->from($this->_entityName,'ps')->andWhere('ps.nivelCate > 0')
                       ->andWhere('ps.contcatePadre = :padre')
                       ->setParameter('padre', $oCategoriaPadre)->orderBy('ps.ordenCate','ASC');
            if (!$todos) $qbProdCate->andWhere('ps.estadoCate = :estadoCate')->setParameter('estadoCate', 1);
//            if ($oProdCategoriacontcatePadre == NULL) $qbProdCate->andWhere('ps.contcatePadre IS NULL');
//            else $qbProdCate->andWhere('ps.contcatePadre = :ocontcatePadre')->setParameter('ocontcatePadre', $oProdCategoriacontcatePadre);
            $qyContentCategoria = $qbProdCate->getQuery();
            $aContentCategoria = $qyContentCategoria->getResult();
            
            $totalItems = count($aContentCategoria);
            $cont=1;
            if ($totalItems > 0 ) {
                foreach ($aContentCategoria as $oProdCategoria) {
                    if (!$oProdCategoria instanceof \web\Entity\CmsContentCategoria)
                        throw new \Exception("No existe categoria dentro del arbol.", 1);
                    
//                    $oProdCategoria = new CmsContentCategoria();
//                    $dqlTotalHijos = "SELECT COUNT(ps.idcontcate) from CmsContentCategoria ps 
//                                    WHERE ps.tipo = :tipo AND ps.contcatePadre = :contcatePadre AND ps.estadoCate=1 ORDER BY ps.ordenCate ASC";
//                    if (!$todos) {$dqlTotalHijos .= ""; }
//                    $qyTotalHijos = $this->_em->createQuery($dqlTotalHijos);
//                    $qyTotalHijos->setParameter("tipo", $idcatpadre)->setParameter("contcatePadre", $oProdCategoria);//->getidcontcate()
//                    $iTotalHijos = $qyTotalHijos->getSingleScalarResult();

                    $qbProdCate2 = $this->_em->createQueryBuilder();
                    $qbProdCate2->select('COUNT(ps.idcontcate)')->from('\web\Entity\CmsContentCategoria','ps')->andWhere('ps.nivelCate > 0');
                    if (!$todos) $qbProdCate2->andWhere('ps.estadoCate = :estadoCate')->setParameter('estadoCate', 1);
                    $qbProdCate2->andWhere('ps.contcatePadre = :padre')->setParameter('padre', $oProdCategoria);
                    $qyContentCategoria2 = $qbProdCate2->getQuery();
                    $iTotalHijos = $qyContentCategoria2->getSingleScalarResult();
                    
                    $idsToFilter = array($language);
                    
                    $this->oTree['str'].="{ nameCate:'".$oProdCategoria->getLanguages()->filter(
                                function($oProdCateLang) use ($idsToFilter) {
                                    return in_array($oProdCateLang->getLanguage()->getIdLanguage(), $idsToFilter);
                                }
                        )->first()->getDescripcion()."',estadoCate:".( ($oProdCategoria->getEstadoCate())?1:0 ).",text:'".$oProdCategoria->getLanguages()->get($language)->getDescripcion()."',idcontcate:".$oProdCategoria->getIdcontcate().",nivelCate:".$oProdCategoria->getNivelCate();
                    if($oProdCategoria->getNivelCate() > 2) $css_menu="subsubmenu";
                    else $css_menu="submenu";

                    if($iTotalHijos>0) $this->oTree['str'].=",cls: 'filaGridC',children: [";
                    else $this->oTree['str'].=",leaf: true,cls:'filaGridC'},";
                    $this->generateTree($oProdCategoria->getIdcontcate(), $language, $todos, $profundidad + 1);//->getidcontcate()
                    if($iTotalHijos>0) $this->oTree['str'].= "]},";
                    if ($totalItems == $cont) $this->oTree['str'] = substr($this->oTree['str'], 0, -1);
                    $cont++;
                }
            }
        } catch(\Exception $e) {
            throw new \Exception("Error al generar Menu.".$e->getMessage());
        }
    }
    
}
