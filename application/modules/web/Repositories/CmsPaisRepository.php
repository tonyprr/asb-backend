<?php

namespace web\Repositories;

use Doctrine\ORM\EntityRepository;
use Vendors\Paginate\Paginate;

/**
 * CmsPaisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CmsPaisRepository extends EntityRepository
{
    public function listRecords($estado="TODOS", $asArray = true, $pageStart=NULL, $pageLimit=NULL) {
        $count= 0;
        $dqlList = 'SELECT m from \web\Entity\CmsPais m';
        if ($estado != "TODOS") $$dqlList.=" WHERE estado = " . $estado;
        $qyPais = $this->_em->createQuery($dqlList);
        
        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyPais);
            $qyPais->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        
        if ($asArray) {
            $resultados = $qyPais->getArrayResult();
            $objRecords=\Tonyprr_lib_Records::getInstance();
            $objRecords->normalizeRecords($resultados);
        } else  {
            $resultados = $qyPais->getResult();
        }
        
        return array($resultados, $count);
    }

    public function listFormSelect($estado="TODOS", $pageStart=NULL, $pageLimit=NULL) {
        $count= 0;
        $dqlList = 'SELECT p.idPais as id, p.nombre as label from \web\Entity\CmsPais p';
        $qyPais = $this->_em->createQuery($dqlList);
        
        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyPais);
            $qyPais->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        $aPais = $qyPais->getArrayResult();
        foreach ($aPais as $rowP) {
            $respu[$rowP['id']]=$rowP['label'];
        }
        return array($respu, $count);
    }

    public function getById($id, $asArray=true, $soloActivo=true) {
        $dqlList = 'SELECT m FROM \web\Entity\CmsPais m WHERE m.idPais = ?1';
        if ($soloActivo) $dqlList.=" AND estado = 1";
        
        $qyPais = $this->_em->createQuery($dqlList);
        $qyPais->setParameter(1, $id);
        if ($asArray) {
            $oPais = $qyPais->getArrayResult();
            $objRecords = \Tonyprr_lib_Records::getInstance();
            if (count($oPais) != 1)
                throw new \Exception('No existe este registro.', 1);
            $objRecords->normalizeRecord($oPais[0]);
            $oPais = $oPais[0];
        } else {
            $oPais = $qyPais->getSingleResult();
        }
        return $oPais;
    }
    
    
}
