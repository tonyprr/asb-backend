<?php

namespace web\Repositories;

use Doctrine\ORM\EntityRepository;
use Vendors\Paginate\Paginate;

/**
 * CmsTipoDocumentoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CmsTipoDocumentoRepository extends EntityRepository
{
    public function listRecords($estado = "TODOS", $oLanguage = 1, $asArray = true, $pageStart = NULL, $pageLimit = NULL) {
        $count= 0;
        if (!$oLanguage instanceof \web\Entity\CmsLanguage)
            $oLanguage = $this->_em->getRepository("\web\Entity\CmsLanguage")->findOneByidLanguage($oLanguage);
        
        $qbTipoDocumento = $this->_em->createQueryBuilder();
        $qbTipoDocumento->select(
                    '
                    td.idtipoDocumento, td.longitudTdoc, td.estadoTipodoc, td.tiempoModif,
                    tdl.nombreTdoc
                    ')->from('\web\Entity\CmsTipoDocumento','td')->innerJoin("td.languages", "tdl")
                    ->where("tdl.language = :lang")->setParameter("lang", $oLanguage);
        if ($estado != "TODOS") $qbTipoDocumento->andWhere('td.estadoTipodoc = :estado')->setParameter('estado', $estado);
        
        $qyTipoDocumento = $qbTipoDocumento->getQuery();

        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyTipoDocumento);
            $qyTipoDocumento->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        if ($asArray) {
            $resultados = $qyTipoDocumento->getArrayResult();
            $objRecords=\Tonyprr_lib_Records::getInstance();
            $objRecords->normalizeRecords($resultados);
        } else  {
            $resultados = $qyTipoDocumento->getResult();
        }
        
        return array($resultados, $count);
    }
    
    public function listformSelect($estado="TODOS", $oLanguage=1, $pageStart=NULL, $pageLimit=NULL) {
        $count= 0;
        if (!$oLanguage instanceof \web\Entity\CmsLanguage) {
            $oLanguage = $this->_em->getRepository("\web\Entity\CmsLanguage")->findOneByidLanguage($oLanguage);
        }
        $qbTipoDocumento = $this->_em->createQueryBuilder();
        $qbTipoDocumento->select(
                    '
                    td.idtipoDocumento, td.longitudTdoc, td.estadoTipodoc, td.tiempoModif,
                    tdl.nombreTdoc 
                    ')->from('\web\Entity\CmsTipoDocumento','td')->innerJoin("td.languages", "tdl")
                    ->where("tdl.language = :lang")->setParameter("lang", $oLanguage);
        if ($estado != "TODOS") $qbTipoDocumento->andWhere('td.estadoTipodoc = :estado')->setParameter('estado', $estado);
        
        $qyTipoDocumento = $qbTipoDocumento->getQuery();
        
        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyTipoDocumento);
            $qyTipoDocumento->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        $aTipoDoc = $qyTipoDocumento->getArrayResult();
        foreach ($aTipoDoc as $rowTP) {
            $respu[$rowTP['idtipoDocumento']]=$rowTP['nombreTdoc'];
        }
        return array($respu, $count);
    }

    public function getById($id, $asArray=true) {
        $dqlList = 'SELECT m FROM \web\Entity\CmsTipoDocumento m WHERE m.idtipoDocumento = ?1';
        $qyTipoDocumento = $this->_em->createQuery($dqlList);
        $qyTipoDocumento->setParameter(1,$id);
        if ($asArray) {
            $oTipoDocumento = $qyTipoDocumento->getArrayResult();
            $objRecords = \Tonyprr_lib_Records::getInstance();
            if (count($oTipoDocumento) != 1)
                throw new \Exception('No existe este registro.',1);
            $objRecords->normalizeRecord($oTipoDocumento[0]);
            $oTipoDocumento = $oTipoDocumento[0];
        } else {
            $oTipoDocumento = $qyTipoDocumento->getSingleResult();
        }
        return $oTipoDocumento;
    }
    
}
