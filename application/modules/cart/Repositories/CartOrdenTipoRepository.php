<?php

namespace cart\Repositories;

use Doctrine\ORM\EntityRepository;
use Vendors\Paginate\Paginate;

/**
 * CartOrdenTipoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartOrdenTipoRepository extends EntityRepository
{

    public function listRecords($asArray, $oLanguage, $activo, $pageStart = NULL, $pageLimit = NULL) {
        $count= 0;
        $oLanguage = $this->_em->getRepository("\web\Entity\CmsLanguage")->findOneByidLanguage($oLanguage);

        $qbOrdenTipo = $this->_em->createQueryBuilder();
        $qbOrdenTipo->select(
                'ot.idOrdenTipo
                ,otl.descripcion'
                )->from($this->_entityName,'ot')
                ->innerJoin('ot.languages','otl')
                ->where("otl.language = :lang")->setParameter('lang', $oLanguage)
                ->orderBy("otl.descripcion", "ASC");
        
        $qbOrdenTipo->andWhere('ot.activo = :activo')->setParameter('activo', $activo);
        $qyOrdenTipo = $qbOrdenTipo->getQuery();
        
        if ($pageStart != NULL and $pageLimit != NULL) {
            $count = Paginate::getTotalQueryResults($qyOrdenTipo);
            $qyOrdenTipo->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        if ($asArray) {
            $resultados = $qyOrdenTipo->getArrayResult();
            $objRecords=\Tonyprr_lib_Records::getInstance();
            $objRecords->normalizeRecords($resultados);
        } else  {
            $resultados = $qyOrdenTipo->getResult();
        }
        
        return array($resultados, $count);
    }        
}
