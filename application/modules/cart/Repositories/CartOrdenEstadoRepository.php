<?php

namespace cart\Repositories;

use Doctrine\ORM\EntityRepository;
use Vendors\Paginate\Paginate;

/**
 * CartOrdenEstadoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartOrdenEstadoRepository extends EntityRepository
{
    public static $PENDIENTE_CANCELAR = 1;
    public static $PENDIENTE_VERIFICAR = 2;
    public static $CANCELADO = 3;
    public static $ANULADO = 4;
    
    public function listRecords($soloActivos=false, $oLanguage=1, $pageStart=NULL, $pageLimit=NULL) {
        $count= 0;
        if (!$oLanguage instanceof \web\Entity\CmsLanguage)
            $oLanguage = $this->_em->getRepository("\web\Entity\CmsLanguage")->findOneByidLanguage($oLanguage);
        
        $qbOrdenEstado = $this->_em->createQueryBuilder();
        $qbOrdenEstado->select(
                    '
                    oe.idOrdenEstado,oe.activo,oe.color,oe.envioEmail,
                    oel.nombre,oel.detalle
                    ')->from($this->_entityName, 'oe')->innerJoin("oe.languages", "oel")
                    ->where("oel.language = :lang")->setParameter("lang", $oLanguage)
                   ->orderBy('oe.idOrdenEstado','ASC');
        if ($soloActivos)
            $qbOrdenEstado->andWhere('oe.activo = :activo')->setParameter('activo', true);
        $qyOrdenEstado = $qbOrdenEstado->getQuery();
        if ($pageStart!= NULL and $pageLimit!=NULL) {
            $count = Paginate::getTotalQueryResults($qyOrdenEstado);
            $qyOrdenEstado->setFirstResult($pageStart)->setMaxResults($pageLimit);
        }
        return array($qyOrdenEstado, $count);
    }

    public function getById($id, $asArray=true) {
        $dqlList = 'SELECT c FROM ' . $this->_entityName . ' c WHERE c.idOrdenEstado = ?1';
        $qyOrdenEstado = $this->_em->createQuery($dqlList);
        $qyOrdenEstado->setParameter(1,$id);
        if ($asArray) {
            $oOrdenEstado = $qyOrdenEstado->getArrayResult();
            $objRecords = \Tonyprr_lib_Records::getInstance();
            if (count($oOrdenEstado) != 1)
                throw new \Exception('No existe este registro.',1);
            $objRecords->normalizeRecord($oOrdenEstado[0]);
            $oOrdenEstado = $oOrdenEstado[0];
        } else {
            $oOrdenEstado = $qyOrdenEstado->getSingleResult();
        }
        return $oOrdenEstado;
    }
    
}
