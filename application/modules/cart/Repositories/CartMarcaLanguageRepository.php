<?php

namespace cart\Repositories;

use Doctrine\ORM\EntityRepository;
use Vendors\Paginate\Paginate;

/**
 * CartMarcaLanguageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartMarcaLanguageRepository extends EntityRepository
{
    public function listLanguage($oMarca, $isArray = true) {
        $aMarcaCateLanguage = array();
        if (!$oMarca instanceof \cart\Entity\CartMarca)
            $oMarca = $this->_em->find('\cart\Entity\CartMarca', $oMarca);
        if ($isArray) {
            $dqlList = "SELECT pcl.idMarcaLanguage,pcl.detalle 
                        ,pc.idmarca, l.idLanguage, l.idioma 
                        from " . $this->_entityName . " pcl 
                        INNER JOIN pcl.language l INNER JOIN pcl.marca pc 
                        WHERE pcl.marca = ?1 AND l.estado = 1";
            
            $qbMarcaCateLanguage =$this->_em->createQuery($dqlList);
            $qbMarcaCateLanguage->setParameter(1, $oMarca);
            $aMarcaCateLanguage = $qbMarcaCateLanguage->getArrayResult();
            $objRecords=  \Tonyprr_lib_Records::getInstance();
            $objRecords->normalizeRecords($aMarcaCateLanguage);
        } else {
            $aMarcaCateLanguage = $this->_em->getRepository($this->_entityName)->findOneBy(array("marca"=>$oMarca));//createQuery($dqlList)
        }
        return $aMarcaCateLanguage;
    }

    public function saveLanguage(array $formData) {
        try {
            $oMarca = $this->_em->find('\cart\Entity\CartMarca', $formData['idmarca']);
            if(!($oMarca instanceof \cart\Entity\CartMarca)) {
                throw new \Exception('No existe el registro.',1);
            }
//            $oMarca = new \CartMarca();
            $idsToFilter = array($formData['idMarcaLanguage']);
            if (!$oMarca->getLanguages()->filter(
                        function($oMarcaLang) use ($idsToFilter) {
                            return in_array($oMarcaLang->getIdMarcaLanguage(), $idsToFilter);
                        })->first()  instanceof \cart\Entity\CartMarcaLanguage ) {
                $oLanguage = $this->_em->find("\web\Entity\CmsLanguage", $formData['idLanguage'] );
                $oMarcaLanguage = new \cart\Entity\CartMarcaLanguage();
                $oMarcaLanguage->setMarca($oMarca)
                                       ->setLanguage($oLanguage)
                                       ->setDetalle($formData['detalle']);
                $oMarca->getLanguages()->add($oMarcaLanguage);
                $this->_em->persist($oMarca);
            } else {
                $oMarca->getLanguages()->filter(
                        function($oMarcaLang) use ($idsToFilter) {
                            return in_array($oMarcaLang->getIdMarcaLanguage(), $idsToFilter);
                        })->first()->setDetalle($formData['detalle']);
                $this->_em->merge($oMarca);
            }
            $this->_em->flush();
            
            return $oMarca;
        } catch(\Exception $e) {
            throw new \Exception("Error al guardar registro. " .$e->getMessage(),1);
        }
    }
}
